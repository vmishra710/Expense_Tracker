"""add categories tables and update expenses

Revision ID: de43b567c0ed
Revises: 
Create Date: 2025-09-11 17:31:42.337330

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'de43b567c0ed'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.add_column('expenses', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('expenses', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('expenses', sa.Column('category_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_expenses_id'), 'expenses', ['id'], unique=False)
    op.drop_constraint(op.f('expenses_owner_id_fkey'), 'expenses', type_='foreignkey')
    op.create_foreign_key(None, 'expenses', 'users', ['owner_id'], ['id'])
    op.create_foreign_key('fk_expenses_categories', 'expenses', 'categories', ['category_id'], ['id'])
    op.drop_column('expenses', 'category')
    op.add_column('users', sa.Column('role', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.drop_constraint(op.f('users_email_key'), 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint(op.f('users_email_key'), 'users', ['email'])
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'role')
    op.add_column('expenses', sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'expenses', type_='foreignkey')
    op.drop_constraint(None, 'expenses', type_='foreignkey')
    op.create_foreign_key(op.f('expenses_owner_id_fkey'), 'expenses', 'users', ['owner_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_expenses_id'), table_name='expenses')
    op.drop_column('expenses', 'category_id')
    op.drop_column('expenses', 'updated_at')
    op.drop_column('expenses', 'created_at')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
